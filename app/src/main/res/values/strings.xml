<resources>
    <string name="app_name">ShoeStore</string>
    <string name="username_id">User Name</string>
    <string name="username_hint">User Name:</string>
    <string name="password_id">Password</string>
    <string name="password_hint">Password</string>
    <string name="loginsuccess">Hello and welcome. You have logged in successfully!</string>
    <string name="loginfailure">Youre login has failed</string>

    <string name="success_text_value">You have logged in successfully.
        Thank you for logging into the show store.</string>

    <string name="failure_text_value">You have not logged in successfully.
        Please contact us with youre current email address.</string>
    <string name="login_button">Login</string>
    <string name="signup_button">Sign Up</string>


    <string name="hello_blank_fragment">Add a new shoe</string>
    <string name="loginfailbtn">Try Again</string>
    <string name="welcome_text">Thank you for using our app. Click the button below to check out some amazing shoes in store</string>
    <string name="shoe_instruction">
        This application presents a list of shoes that you may have stacked on you\'re shoe rack.
        The home screen shows a list of shoes, presented in a scrollview.
        You can add new shoes by clicking the plus button at the bottom of the screen.

    </string>
    <string name="instructions_title">Shoe Store</string>
    <string name="intro_button">Enter Store</string>
    <string name="landing_img">landingimage</string>
    <string name="btnText">Go to shoes</string>
    <string name="menu_item_1">About</string>
    <string name="menu_item_2">Information</string>
    <string name="about_fragment">About</string>
    <string name="about_in"><b>Clancys ShoeList App:\nVersion 1:\nDevelopment Date:</b> 2020-11-01
        \n\nClancys Shoe Store. This app is the one stop shop for storing all of you\'re dearly loved shoe purchases.
        </string>
    <string name="sboutshoes">Information about shoes</string>
    <string name="aboutShoes">About Shoes</string>
    <string name="shoename">Shoe Name:</string>
    <string name="companyname">Company Name:</string>
    <string name="shoesize">Shoe Size:</string>
    <string name="desc">Description:</string>
    <string name="shoenamehint">Shoe Name:</string>
    <string name="companynamehint">Shoe Manufacturer</string>
    <string name="shoesizehint">Shoe Size:</string>
    <string name="deschint">Shoe Description:</string>
    <string name="savebtn">Save Item</string>
    <string name="cancelbtn">Cancel</string>

    <string name="contentdesc"> Floating Action Button links to the shoe detail fragment</string>

    <string name="shoelist_title_text">List of Shoes</string>
    <string name="new_shoe_button_content_desc">New Shoe Button</string>
    <string name="logouttitle">Logout</string>


</resources>

<!-- Comments on the selected view layouts

activity_main: This layout is wrapped in a DrawerLayout widget, which supports the draw out menu.
LinearLayout provides a simple placeholder for the main login fragment.
There is no requirements for a complex layout.

fragment_about: This layout is a simple vertically biased view using LinearLayout which works well for this
type of layout. It holds the 2no textviews.

fragment_instruction / fragment_login_success:
These layouts uses constraintlayout. LinearLayout could have been used, however the
additional view items image, button/s would lead to deeper nesting of views with LinearLayouts useds within Linearlayouts.
ConstraintLayout is better suited as the layout can be arranged freely and adapt to suit the screen size
of the device.

fragment_shoe_detail:
This layout has quite a number of views. Constraint layout is best suited and provides greater flexibility
to enable a fluid layout.

fragment_shoe_list:
This layout holds the dynamic shoelist. The LinearLayout and Scroll view are used as required to enable the generation of
textviews for each added shoe, and scrolling as the list grows. The overall layout is wrapped in a constraintLayout
to support flexible positioning of the FloatingActionButton and other additional views.

login_main:
We create the loginLayout which is the first view shown in the app
ConstraintLayout is used here to enable a flexible login screen. LinearLayout (vertical) could be used
however ConstraintLayout is used to avoid the required nesting of LinearLayouts view to present the horizontal items (i.e. buttons).

nav_header:
This layout uses a constraint layout which would adapt nicely with a variety of screen sizes.
The constraints also balance the view nicely.

shoe_layout:
This view holds the layout for a single shoe. Linearlayout (horizontal) is used as this is a straight forward horizontal
set of textviews for each of the shoe items. This works nicely as we simply use the layout weight for spacing.

-->
